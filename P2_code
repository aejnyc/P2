import pandas as pd
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.tree import plot_tree
from sklearn.metrics import accuracy_score, confusion_matrix
from sklearn.preprocessing import LabelEncoder

import numpy as np
import matplotlib.pyplot as plt

df = pd.read_csv("recyclable_gases_complex.csv")

le = LabelEncoder()
df['GasType'] = le.fit_transform(df['GasType'])

X = df.drop('GasType', axis=1)
y = df['GasType']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = DecisionTreeClassifier(max_depth=4)
model.fit(X_train, y_train)
predictions = model.predict(X_test)


plt.figure(figsize=(20, 10))  
plot_tree(
    model, 
    feature_names=X.columns, 
    class_names=le.inverse_transform(np.unique(y)).astype(str), 
    filled=True, 
    rounded=True, 
    fontsize=10
)
plt.title("Decision Tree Visualization")
plt.show() 

labels = le.inverse_transform(sorted(set(y_test) | set(predictions))) #show the decision tree, check the labels 
accuracy = accuracy_score(y_test, predictions)
print("Accuracy:", accuracy)
cm = confusion_matrix(y_test, predictions)
plt.figure(figsize=(8, 6))
sns.heatmap(cm, annot=True, fmt="d", cmap="Blues", xticklabels=labels, yticklabels=labels)

plt.title("Confusion Matrix")
plt.xlabel("Predicted")
plt.ylabel("Actual")

plt.show()
